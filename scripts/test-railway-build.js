#!/usr/bin/env node

import { execSync } from 'child_process';
import fs from 'fs';
import path from 'path';

console.log('üß™ Test du build Railway...');

// V√©rifier que package.json existe
if (!fs.existsSync('package.json')) {
    console.error('‚ùå package.json non trouv√©');
    process.exit(1);
}

// V√©rifier que railway-build.sh existe
if (!fs.existsSync('railway-build.sh')) {
    console.error('‚ùå railway-build.sh non trouv√©');
    process.exit(1);
}

// V√©rifier que railway.toml existe
if (!fs.existsSync('railway.toml')) {
    console.error('‚ùå railway.toml non trouv√©');
    process.exit(1);
}

try {
    // Nettoyer les builds pr√©c√©dents
    console.log('üßπ Nettoyage des builds pr√©c√©dents...');
    if (fs.existsSync('dist')) {
        fs.rmSync('dist', { recursive: true, force: true });
    }
    
    // Ex√©cuter le script de build
    console.log('üî® Ex√©cution du script de build...');
    execSync('./railway-build.sh', { 
        stdio: 'inherit',
        cwd: process.cwd()
    });
    
    // V√©rifier que les fichiers de build existent
    console.log('‚úÖ V√©rification des fichiers de build...');
    
    if (!fs.existsSync('dist/index.js')) {
        throw new Error('dist/index.js non trouv√©');
    }
    
    if (!fs.existsSync('dist/public')) {
        throw new Error('dist/public non trouv√©');
    }
    
    console.log('‚úÖ Build test r√©ussi !');
    console.log('üìÅ Fichiers g√©n√©r√©s:');
    console.log('   - dist/index.js');
    console.log('   - dist/public/');
    
} catch (error) {
    console.error('‚ùå Erreur lors du test de build:', error.message);
    process.exit(1);
} 