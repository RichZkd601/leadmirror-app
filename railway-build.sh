#!/bin/bash

set -e  # Arr√™ter le script en cas d'erreur

echo "üöÄ Build Railway - LeadMirror"

# V√©rifier que nous sommes dans le bon r√©pertoire
if [ ! -f "package.json" ]; then
    echo "‚ùå Erreur: package.json non trouv√©. Assurez-vous d'√™tre dans le bon r√©pertoire."
    exit 1
fi

# Nettoyer le cache npm au d√©but
echo "üßπ Nettoyage du cache npm..."
npm cache clean --force || true

# Installation des d√©pendances avec fallback robuste
echo "üì¶ Installation des d√©pendances..."
if ! npm ci --no-audit --no-fund --prefer-offline; then
    echo "‚ö†Ô∏è  npm ci a √©chou√©, tentative avec npm install..."
    if ! npm install --no-audit --no-fund --prefer-offline; then
        echo "‚ùå Erreur: Impossible d'installer les d√©pendances"
        exit 1
    fi
fi

# V√©rifier que les d√©pendances sont install√©es
if [ ! -d "node_modules" ]; then
    echo "‚ùå Erreur: node_modules non trouv√© apr√®s installation."
    exit 1
fi

# V√©rifier que les outils de build sont disponibles
if ! command -v npx &> /dev/null; then
    echo "‚ùå Erreur: npx non trouv√©"
    exit 1
fi

# Cr√©er le dossier dist s'il n'existe pas
mkdir -p dist/public

# Build du frontend simplifi√© (copier les fichiers statiques)
echo "üî® Build du frontend (simplifi√©)..."
if [ -d "client/src" ]; then
    echo "‚úÖ Dossier client/src trouv√©"
    # Copier les fichiers statiques si disponibles
    if [ -f "client/index.html" ]; then
        cp client/index.html dist/public/ 2>/dev/null || true
    fi
else
    echo "‚ö†Ô∏è  Dossier client/src non trouv√©, cr√©ation d'un index.html basique"
    echo '<!DOCTYPE html><html><head><title>LeadMirror</title></head><body><h1>LeadMirror API</h1><p>API is running</p></body></html>' > dist/public/index.html
fi

# Build du backend avec esbuild
echo "üî® Build du backend..."
if npx esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist; then
    echo "‚úÖ Build backend r√©ussi"
else
    echo "‚ùå Erreur lors du build du backend"
    exit 1
fi

# V√©rifier que le build backend a r√©ussi
if [ ! -f "dist/index.js" ]; then
    echo "‚ùå Erreur: dist/index.js non trouv√© apr√®s build backend"
    exit 1
fi

# V√©rifier les variables d'environnement critiques
echo "üîç V√©rification des variables d'environnement..."
if [ -z "$DATABASE_URL" ]; then
    echo "‚ö†Ô∏è  Avertissement: DATABASE_URL non d√©finie"
fi

if [ -z "$OPENAI_API_KEY" ]; then
    echo "‚ö†Ô∏è  Avertissement: OPENAI_API_KEY non d√©finie"
fi

if [ -z "$STRIPE_SECRET_KEY" ]; then
    echo "‚ö†Ô∏è  Avertissement: STRIPE_SECRET_KEY non d√©finie"
fi

if [ -z "$SESSION_SECRET" ]; then
    echo "‚ö†Ô∏è  Avertissement: SESSION_SECRET non d√©finie"
fi

# Nettoyer le cache npm √† la fin
echo "üßπ Nettoyage final du cache npm..."
npm cache clean --force || true

echo "‚úÖ Build Railway termin√© avec succ√®s !"
echo "üìä R√©sum√© du build:"
echo "   - Frontend: dist/public/"
echo "   - Backend: dist/index.js"
echo "   - Port: $PORT"
echo "   - Environnement: $NODE_ENV" 