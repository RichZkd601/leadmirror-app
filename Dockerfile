# Utiliser une image Node.js optimis√©e pour la production
FROM node:20-alpine AS base

# Installer les d√©pendances syst√®me n√©cessaires
RUN apk add --no-cache \
    curl \
    && rm -rf /var/cache/apk/*

# D√©finir le r√©pertoire de travail
WORKDIR /app

# Copier les fichiers de configuration npm pour optimiser le cache
COPY package*.json .npmrc* ./

# Installer les d√©pendances avec gestion d'erreurs robuste
RUN npm ci --no-audit --no-fund --prefer-offline --production=false && \
    npm cache clean --force && \
    echo "‚úÖ D√©pendances install√©es avec succ√®s"

# Copier le reste du code source
COPY . .

# V√©rifier que tous les fichiers n√©cessaires sont pr√©sents
RUN echo "üîç V√©rification des fichiers critiques..." && \
    ls -la package.json && \
    ls -la server/index.ts && \
    echo "‚úÖ Tous les fichiers critiques sont pr√©sents"

# Build de l'application
RUN echo "üî® Build de l'application..." && \
    npm run build && \
    echo "‚úÖ Build termin√© avec succ√®s"

# V√©rifier que les fichiers de build existent
RUN echo "üîç V√©rification des fichiers de build..." && \
    ls -la dist/ && \
    ls -la dist/index.js && \
    ls -la dist/public/ && \
    echo "‚úÖ Tous les fichiers de build sont pr√©sents"

# Cr√©er un utilisateur non-root pour la s√©curit√©
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001 && \
    echo "‚úÖ Utilisateur non-root cr√©√©"

# Changer la propri√©t√© des fichiers et nettoyer
RUN chown -R nextjs:nodejs /app && \
    echo "‚úÖ Permissions mises √† jour"

# Passer √† l'utilisateur non-root
USER nextjs

# Exposer le port (Railway d√©finit automatiquement PORT)
EXPOSE 5000

# D√©finir les variables d'environnement par d√©faut
ENV NODE_ENV=production
ENV PORT=5000

# Healthcheck pour v√©rifier que l'application fonctionne
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=5 \
    CMD curl -f http://localhost:$PORT/ || exit 1

# Commande de d√©marrage optimis√©e pour Railway
CMD ["node", "scripts/start.js"] 
